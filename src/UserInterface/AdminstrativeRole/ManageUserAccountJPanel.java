package UserInterface.AdminstrativeRole;

import Business.Business;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Praneeth Reddy
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Business business;    /**
     * Creates new form ManageUserAccountJPanel
     */
    public ManageUserAccountJPanel(JPanel userProcessContainer,Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        populateUserAccountTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountTbl = new javax.swing.JTable();
        addUserTxt = new javax.swing.JButton();
        refreshTxt = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        userAccountTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Account", "Password", "Status", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userAccountTbl);
        if (userAccountTbl.getColumnModel().getColumnCount() > 0) {
            userAccountTbl.getColumnModel().getColumn(0).setResizable(false);
            userAccountTbl.getColumnModel().getColumn(1).setResizable(false);
            userAccountTbl.getColumnModel().getColumn(2).setResizable(false);
            userAccountTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        addUserTxt.setText("Add UserAccount");
        addUserTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserTxtActionPerformed(evt);
            }
        });

        refreshTxt.setText("Refresh");
        refreshTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTxtActionPerformed(evt);
            }
        });

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshTxt))
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn)
                        .addGap(18, 18, 18)
                        .addComponent(addUserTxt)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUserTxt)
                    .addComponent(refreshTxt)
                    .addComponent(deleteBtn))
                .addGap(32, 32, 32)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = userAccountTbl.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Select a row to delete");
            return;
        }
        
        UserAccount userAccount = (UserAccount)userAccountTbl.getValueAt(selectedRow, 0);
        if(userAccount.getUserName().equalsIgnoreCase("Admin")){
            JOptionPane.showMessageDialog(null, "Admin can't be deleted.");
            return;
        }
        userAccount.setStatus("Disabled");
        JOptionPane.showMessageDialog(null, "The User Account has been disabled.");
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void addUserTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserTxtActionPerformed
        // TODO add your handling code here:
        AddUserAccountJPanel userAccountJPanel = new AddUserAccountJPanel(userProcessContainer,business);
        userProcessContainer.add("AddUserAccountJPanel", userAccountJPanel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addUserTxtActionPerformed

    private void refreshTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTxtActionPerformed
        // TODO add your handling code here:
        populateUserAccountTable();
    }//GEN-LAST:event_refreshTxtActionPerformed

    public void populateUserAccountTable(){
        DefaultTableModel dtm = (DefaultTableModel)userAccountTbl.getModel();
        dtm.setRowCount(0);
        for(Organization o: business.getOrganizationDirectory().getOrganizationDirectory())
        for(UserAccount userAccount : o.getUserAccountDirectory().getUserAccountDirectory()){
            Object[] rows = new Object[4];
            
            rows[0] = userAccount;
            rows[1] = userAccount.getPassword();
            rows[2] = userAccount.getStatus();
            rows[3] = userAccount.getRole();
            
         dtm.addRow(rows);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserTxt;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshTxt;
    private javax.swing.JTable userAccountTbl;
    // End of variables declaration//GEN-END:variables
}
