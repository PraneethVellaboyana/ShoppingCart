/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.ShippingSpecialistRole;

import Business.Organization.ShippingSpecialistOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Praneeth Reddy
 */
public class ShipApprovedOrdersPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private ShippingSpecialistOrganization sso;
    
    /**
     * Creates new form ShipApprovedOrdersPanel
     */
    public ShipApprovedOrdersPanel(JPanel userProcessContainer, ShippingSpecialistOrganization sso,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.sso = sso;
        this.userAccount = userAccount;
        populateTable();
    }
    
    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)tblProcessShip.getModel();
        
        dtm.setRowCount(0);
        
        for(WorkRequest wr: sso.getWorkQueue().getWorkRequests()){
            if(wr instanceof OrderWorkRequest){
            Object[] row = new Object[6];
            
            row[0] = wr.getSender();
            row[1] = wr.getReceiver()==null?"To be Assigned":wr.getReceiver();
            row[2] = wr.getStatus();
            row[3] = wr.getRequestDate();
            row[4] = wr.getResolveDate()==null?"To be resolved":wr.getResolveDate();
            row[5] = wr;
            
            dtm.addRow(row);
        }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProcessShip = new javax.swing.JTable();
        btnSelfAssign = new javax.swing.JButton();
        txtShipMsg = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnShipOrder = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("Process Shipment");

        tblProcessShip.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Receiver", "Status", "Req Date", "Res Date", "Msg"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProcessShip);

        btnSelfAssign.setText("Self-Assign");
        btnSelfAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelfAssignActionPerformed(evt);
            }
        });

        jLabel2.setText("Ship Msg:");

        btnShipOrder.setText("Ship Order");
        btnShipOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShipOrderActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btnSelfAssign)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtShipMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShipOrder))
                .addGap(62, 62, 62))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelfAssign)
                    .addComponent(txtShipMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShipOrder)
                    .addComponent(backJButton))
                .addContainerGap(56, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelfAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelfAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProcessShip.getSelectedRow();

        if(selectedRow <0){
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }

        OrderWorkRequest owr = (OrderWorkRequest)tblProcessShip.getValueAt(selectedRow, 5);
        if(owr.getReceiver() != null){
            JOptionPane.showMessageDialog(null, "This Request has already been assigned.");
            return;
        }
        owr.setReceiver(userAccount);
        owr.setStatus(WorkRequest.Status.PENDING.getValue());

        populateTable();
    }//GEN-LAST:event_btnSelfAssignActionPerformed

    private void btnShipOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShipOrderActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblProcessShip.getSelectedRow();

        if(selectedRow <0){
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }

        String shippedStatus = txtShipMsg.getText().trim();

        if(shippedStatus.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter a response.");
            return;
        }

        OrderWorkRequest wr = (OrderWorkRequest)tblProcessShip.getValueAt(selectedRow, 5);

        if(!wr.getReceiver().equals(userAccount)){
            JOptionPane.showMessageDialog(null, "This Request is being processed by another Shipping Specialist.");
            return;
        }
        if(wr.getStatus().equals(WorkRequest.Status.SHIPPED.getValue())){
            JOptionPane.showMessageDialog(null, "This request has been shipped.");
            return;
        }
        wr.setStatus(WorkRequest.Status.SHIPPED.getValue());
        wr.setResolveDate(new Date());
        wr.setMessage(shippedStatus);
        populateTable();
    }//GEN-LAST:event_btnShipOrderActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnSelfAssign;
    private javax.swing.JButton btnShipOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProcessShip;
    private javax.swing.JTextField txtShipMsg;
    // End of variables declaration//GEN-END:variables
}
